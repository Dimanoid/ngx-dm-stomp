{"version":3,"file":"stomp.service.js","sourceRoot":"","sources":["../../../../src/stomp.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { StompClient, StompFrame } from './stomp';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nexport enum DmStompState {\n    Undefined,\n    Connecting,\n    Connected,\n    Disconnecting,\n    Disconnected\n}\n\nexport class DmStompServiceConfig {\n    url: string = '';\n    login: string = 'guest';\n    passcode: string = 'guest';\n    heartbeatIn: number = 0;\n    heartbeatOut: number =20000;\n    ws?: WebSocket;\n    host: string = '/';\n    protocols?: string[] = ['v10.stomp', 'v11.stomp'];\n}\n\n\nexport class StompQ {\n    static debug?: (...args: any[]) => void;\n\n    static client(url: string, protocols?: string[]): StompClient {\n        if (protocols == null) {\n            protocols = ['v10.stomp', 'v11.stomp'];\n        }\n        const ws = new WebSocket(url, protocols);\n        return new StompClient(ws);\n    }\n\n    static over(ws: WebSocket) {\n        return new StompClient(ws);\n    }\n\n    static D(...args: any[]) {\n        if (this.debug) {\n            this.debug(...args);\n        }\n    }\n\n}\n\nexport class DmStompService {\n\n    private _state: DmStompState = DmStompState.Undefined;\n    public state: BehaviorSubject<DmStompState> = new BehaviorSubject(DmStompState.Undefined);\n\n    public lastError?: StompFrame;\n    public onError: Subject<StompFrame> = new Subject();\n\n    public onConnect: Subject<StompFrame> = new Subject();\n    public onDisconnect: Subject<StompFrame> = new Subject();\n\n    public onReceive: Subject<StompFrame> = new Subject();\n    public onReceipt: Subject<StompFrame> = new Subject();\n\n    public debug: Subject<any> = new Subject();\n    \n    private client?: StompClient;\n\n    constructor(private config?: DmStompServiceConfig) {\n        if (config) {\n            this.configure(config);\n        }\n    }\n\n    configure(config: DmStompServiceConfig): void {\n        this.config = config;\n        const ws = this.config.ws || new WebSocket(this.config.url, this.config.protocols);\n        this.client = new StompClient(ws);\n        this.client.heartbeat.incoming = this.config.heartbeatIn;\n        this.client.heartbeat.outgoing = this.config.heartbeatOut;\n        this.client.errorCallback = f => this.onError.next(f);\n        this.client.connectCallback = f => this.onConnect.next(f);\n        this.client.disconnectCallback = f => this.onDisconnect.next(f);\n        this.client.onreceive = f => this.onReceive.next(f);\n        this.client.onreceipt = f => this.onReceipt.next(f);\n    }\n\n    connect(): boolean {\n        if (\n            (this._state != DmStompState.Undefined && this._state != DmStompState.Disconnected)\n            || !this.client\n            || !this.config\n        ) {\n            return false;\n        }\n        this.state.next(DmStompState.Connecting);\n        this.client.connect(this.config.login, this.config.passcode, this.config.host);\n        return true;\n    }\n\n\n    disconnect(headers?: { [id: string]: string }): void {\n        this.state.next(DmStompState.Disconnecting);\n        this.client!.disconnect(\n            () => this.state.next(DmStompState.Disconnected),\n            headers\n        );\n    }\n\n    publish(topic: string, message: string, headers?: { [id: string]: string }) {\n        this.client!.send(topic, headers || {}, message);\n    }\n\n    subscribe(topic: string, callback: (frame: StompFrame) => void, headers?: { [id: string]: string }): void {\n        this.client!.subscribe(topic, (msg) => callback(msg), headers || { ack: 'auto' });\n    }\n\n    isConnected(): boolean {\n        return this.client ? this.client.connected : false;\n    }\n\n}\n"]}