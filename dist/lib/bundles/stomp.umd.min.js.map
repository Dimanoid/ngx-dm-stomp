{"version":3,"sources":["../esm5/src/stomp.js","../esm5/src/stomp.service.js"],"names":["DmStompState","Byte","VERSIONS","StompFrame","command","headers","body","this","marshall","toString","unmarshall","datas","ref","split","RegExp","results","i","length","data","push","unmarshallSingle","divider","search","headerLines","substring","shift","trim","str","replace","reverse","line","idx","indexOf","start","len","parseInt","chr","j","ref_1","charAt","prototype","lines","skipContentLength","_i","_a","Object","keys","name_1","sizeOfUTF8","join","s","match","encodeURI","StompClient","ws","counter","connected","heartbeat","outgoing","incoming","maxWebSocketFrameSize","subscriptions","serverActivity","binaryType","D","args","arguments","debug","apply","now","Date","valueOf","_transmit","out","send","_setupHeartbeat","_this","version","hb","serverOutgoing","serverIncoming","ttl","Math","max","pinger","setInterval","ttl_1","ponger","delta","close","connect","login","passcode","host","onmessage","evt","ArrayBuffer","arr","Uint8Array","String","fromCharCode","umData","_loop_1","frame","server","connectCallback","subscription_1","subscription","onreceive","messageID_1","ack","nack","onreceipt","readyState","errorCallback","onclose","q","_cleanUp","disconnectCallback","onopen","disconnect","clearInterval","destination","subscribe","callback","id","unsubscribe","begin","transaction","txid","commit","abort","messageID","DmStompServiceConfig","url","heartbeatIn","heartbeatOut","protocols","StompQ","client","WebSocket","over","DmStompService","config","_state","Undefined","state","BehaviorSubject","onError","Subject","onConnect","onDisconnect","onReceive","onReceipt","configure","f","next","Disconnected","Connecting","Disconnecting","publish","topic","message","msg","isConnected"],"mappings":"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","sourcesContent":["// Converted to typescript by Dmitry Mukhin (https://github.com/Dimanoid)\n// Generated by CoffeeScript 1.7.1\n/*\n   Stomp Over WebSocket http://www.jmesnil.net/stomp-websocket/doc/ | Apache License V2.0\n   Copyright (C) 2010-2013 [Jeff Mesnil](http://jmesnil.net/)\n   Copyright (C) 2012 [FuseSource, Inc.](http://fusesource.com)\n */\nvar Byte = {\n    LF: '\\x0A',\n    NULL: '\\x00'\n};\nvar VERSIONS = {\n    V1_0: '1.0',\n    V1_1: '1.1',\n    V1_2: '1.2',\n    supportedVersions: '1.1,1.0'\n};\n// export interface StompMessage {\n//     command: string;\n//     headers: any;\n//     body: string;\n//     ack(headers?: any): void;\n//     nack(headers?: any): void;\n// }\nvar StompFrame = /** @class */ (function () {\n    function StompFrame(command, headers, body) {\n        this.command = command;\n        this.headers = headers != null ? headers : {};\n        this.body = body != null ? body : '';\n    }\n    StompFrame.marshall = function (command, headers, body) {\n        var frame;\n        frame = new StompFrame(command, headers, body);\n        return frame.toString() + Byte.NULL;\n    };\n    StompFrame.unmarshall = function (datas) {\n        var ref = datas.split(RegExp('' + Byte.NULL + Byte.LF + '*'));\n        var results = [];\n        for (var i = 0; i < ref.length; i++) {\n            var data = ref[i];\n            if (data && data.length > 0) {\n                results.push(StompFrame.unmarshallSingle(data));\n            }\n        }\n        return results;\n    };\n    StompFrame.unmarshallSingle = function (data) {\n        var divider = data.search(RegExp('' + Byte.LF + Byte.LF));\n        var headerLines = data.substring(0, divider).split(Byte.LF);\n        var command = headerLines.shift();\n        var headers = {};\n        var trim = function (str) { return str.replace(/^\\s+|\\s+$/g, ''); };\n        var ref = headerLines.reverse();\n        for (var i = 0; i < ref.length; i++) {\n            var line = ref[i];\n            var idx = line.indexOf(':');\n            headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\n        }\n        var body = '';\n        var start = divider + 2;\n        if (headers['content-length']) {\n            var len = parseInt(headers['content-length'], 0);\n            body = ('' + data).substring(start, start + len);\n        }\n        else {\n            var chr = null;\n            for (var i = start, j = start, ref_1 = data.length; start <= ref_1 ? j < ref_1 : j > ref_1; i = start <= ref_1 ? ++j : --j) {\n                chr = data.charAt(i);\n                if (chr === Byte.NULL) {\n                    break;\n                }\n                body += chr;\n            }\n        }\n        return new StompFrame(command, headers, body);\n    };\n    StompFrame.prototype.toString = function () {\n        var lines = [this.command];\n        var skipContentLength = !this.headers['content-length'];\n        if (skipContentLength) {\n            delete this.headers['content-length'];\n        }\n        for (var _i = 0, _a = Object.keys(this.headers); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            lines.push('' + name_1 + ':' + this.headers[name_1]);\n        }\n        if (this.body && !skipContentLength) {\n            lines.push('content-length:' + (this.sizeOfUTF8(this.body)));\n        }\n        lines.push(Byte.LF + this.body);\n        return lines.join(Byte.LF);\n    };\n    StompFrame.prototype.sizeOfUTF8 = function (s) {\n        if (s) {\n            var match = encodeURI(s).match(/%..|./g);\n            return match ? match.length : 0;\n        }\n        return 0;\n    };\n    return StompFrame;\n}());\nexport { StompFrame };\nvar StompClient = /** @class */ (function () {\n    function StompClient(ws) {\n        this.counter = 0;\n        this.connected = false;\n        this.heartbeat = {\n            outgoing: 10000,\n            incoming: 10000\n        };\n        this.maxWebSocketFrameSize = 16 * 1024;\n        this.subscriptions = {};\n        this.headers = {};\n        this.serverActivity = 0;\n        this.ws = ws;\n        this.ws.binaryType = 'arraybuffer';\n    }\n    StompClient.prototype.D = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this.debug) {\n            this.debug.apply(this, args);\n        }\n        ;\n    };\n    StompClient.prototype.now = function () {\n        if (Date.now) {\n            return Date.now();\n        }\n        else {\n            return new Date().valueOf();\n        }\n    };\n    StompClient.prototype._transmit = function (command, headers, body) {\n        var out = StompFrame.marshall(command, headers, body);\n        this.D('>>> ', out);\n        while (true) {\n            if (out.length > this.maxWebSocketFrameSize) {\n                this.ws.send(out.substring(0, this.maxWebSocketFrameSize));\n                out = out.substring(this.maxWebSocketFrameSize);\n                this.D('remaining = ', out.length);\n            }\n            else {\n                return this.ws.send(out);\n            }\n        }\n    };\n    StompClient.prototype._setupHeartbeat = function (headers) {\n        var _this = this;\n        if (headers.version !== VERSIONS.V1_1 && headers.version !== VERSIONS.V1_2) {\n            return;\n        }\n        var hb = headers['heart-beat'].split(',');\n        var serverOutgoing = hb[0];\n        var serverIncoming = hb[1];\n        if (this.heartbeat.outgoing !== 0 && +serverIncoming !== 0) {\n            var ttl = Math.max(this.heartbeat.outgoing, +serverIncoming);\n            this.D('send PING every ', ttl, 'ms');\n            this.pinger = setInterval(function () {\n                _this.ws.send(Byte.LF);\n                _this.D('>>> PING');\n            }, ttl);\n        }\n        if (this.heartbeat.incoming !== 0 && +serverOutgoing !== 0) {\n            var ttl_1 = Math.max(this.heartbeat.incoming, +serverOutgoing);\n            this.D('check PONG every ', ttl_1, 'ms');\n            this.ponger = setInterval(function () {\n                var delta = _this.now() - _this.serverActivity;\n                if (delta > ttl_1 * 2) {\n                    _this.D('did not receive server activity for the last', delta, 'ms');\n                    _this.ws.close();\n                }\n            }, ttl_1);\n        }\n    };\n    StompClient.prototype.connect = function (login, passcode, host) {\n        var _this = this;\n        this.headers['login'] = login;\n        this.headers['passcode'] = passcode;\n        this.headers['host'] = host;\n        this.D('Opening Web Socket...');\n        this.ws.onmessage = function (evt) {\n            var data;\n            if (typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer) {\n                var arr = new Uint8Array(evt.data);\n                _this.D('--- got data length:', arr.length);\n                data = '';\n                for (var i = 0; i < arr.length; i++) {\n                    data = data + String.fromCharCode(arr[i]);\n                }\n            }\n            else {\n                data = evt.data;\n            }\n            _this.serverActivity = _this.now();\n            if (data === Byte.LF) {\n                _this.D('<<< PONG');\n                return;\n            }\n            _this.D('<<< ' + data);\n            var umData = StompFrame.unmarshall(data);\n            var _loop_1 = function (i) {\n                var frame = umData[i];\n                switch (frame.command) {\n                    case 'CONNECTED':\n                        _this.D('connected to server ', frame.headers.server);\n                        _this.connected = true;\n                        _this._setupHeartbeat(frame.headers);\n                        if (_this.connectCallback) {\n                            _this.connectCallback(frame);\n                        }\n                        break;\n                    case 'MESSAGE':\n                        var subscription_1 = frame.headers.subscription;\n                        var onreceive = _this.subscriptions[subscription_1] || _this.onreceive;\n                        if (onreceive) {\n                            var messageID_1 = frame.headers['message-id'];\n                            frame.ack = function (headers) {\n                                if (headers == null) {\n                                    headers = {};\n                                }\n                                _this.ack(messageID_1, subscription_1, headers);\n                            };\n                            frame.nack = function (headers) {\n                                if (headers == null) {\n                                    headers = {};\n                                }\n                                return _this.nack(messageID_1, subscription_1, headers);\n                            };\n                            onreceive(frame);\n                        }\n                        else {\n                            _this.D('Unhandled received MESSAGE:', frame);\n                        }\n                        break;\n                    case 'RECEIPT':\n                        if (_this.onreceipt) {\n                            _this.onreceipt(frame);\n                        }\n                        break;\n                    case 'ERROR':\n                        _this.D('ws.readyState:', _this.ws.readyState);\n                        if (_this.errorCallback) {\n                            _this.errorCallback(frame);\n                            _this.D('after errorCallback ws.readyState:', _this.ws.readyState);\n                        }\n                        break;\n                    default:\n                        _this.D('Unhandled frame:', frame);\n                }\n                _this.D('after switch ws.readyState:', _this.ws.readyState);\n            };\n            for (var i = 0; i < umData.length; i++) {\n                _loop_1(i);\n            }\n            _this.D('after for ws.readyState:', _this.ws.readyState);\n        };\n        this.ws.onclose = function () {\n            var q = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                q[_i] = arguments[_i];\n            }\n            _this.D('ws.onclose, ws.readyState:', _this.ws.readyState, q);\n            _this._cleanUp();\n            if (_this.disconnectCallback) {\n                _this.disconnectCallback();\n            }\n        };\n        this.ws.onopen = function () {\n            _this.D('Web Socket Opened...');\n            _this.headers['accept-version'] = VERSIONS.supportedVersions;\n            _this.headers['heart-beat'] = [_this.heartbeat.outgoing, _this.heartbeat.incoming].join(',');\n            _this._transmit('CONNECT', _this.headers);\n        };\n    };\n    StompClient.prototype.disconnect = function (disconnectCallback, headers) {\n        this.D('disconnect, ws.readyState:', this.ws.readyState);\n        this._transmit('DISCONNECT', headers || {});\n        this.ws.onclose = null;\n        this.ws.close();\n        this._cleanUp();\n        if (disconnectCallback) {\n            disconnectCallback();\n        }\n    };\n    StompClient.prototype._cleanUp = function () {\n        this.connected = false;\n        if (this.pinger) {\n            clearInterval(this.pinger);\n        }\n        if (this.ponger) {\n            return clearInterval(this.ponger);\n        }\n    };\n    StompClient.prototype.send = function (destination, headers, body) {\n        if (headers == null) {\n            headers = {};\n        }\n        if (body == null) {\n            body = '';\n        }\n        headers.destination = destination;\n        return this._transmit('SEND', headers, body);\n    };\n    StompClient.prototype.subscribe = function (destination, callback, headers) {\n        var _this = this;\n        if (headers == null) {\n            headers = {};\n        }\n        if (!headers.id) {\n            headers.id = 'sub-' + this.counter++;\n        }\n        headers.destination = destination;\n        this.subscriptions[headers.id] = callback;\n        this._transmit('SUBSCRIBE', headers);\n        return {\n            id: headers.id,\n            unsubscribe: function () { return _this.unsubscribe(headers.id); }\n        };\n    };\n    StompClient.prototype.unsubscribe = function (id) {\n        delete this.subscriptions[id];\n        this._transmit('UNSUBSCRIBE', { id: id });\n    };\n    StompClient.prototype.begin = function (transaction) {\n        var _this = this;\n        var txid = transaction || 'tx-' + this.counter++;\n        this._transmit('BEGIN', {\n            transaction: txid\n        });\n        return {\n            id: txid,\n            commit: function () { return _this.commit(txid); },\n            abort: function () { return _this.abort(txid); }\n        };\n    };\n    StompClient.prototype.commit = function (transaction) {\n        return this._transmit('COMMIT', { transaction: transaction });\n    };\n    StompClient.prototype.abort = function (transaction) {\n        this._transmit('ABORT', { transaction: transaction });\n    };\n    StompClient.prototype.ack = function (messageID, subscription, headers) {\n        if (headers == null) {\n            headers = {};\n        }\n        headers['message-id'] = messageID;\n        headers.subscription = subscription;\n        return this._transmit('ACK', headers);\n    };\n    StompClient.prototype.nack = function (messageID, subscription, headers) {\n        if (headers == null) {\n            headers = {};\n        }\n        headers['message-id'] = messageID;\n        headers.subscription = subscription;\n        return this._transmit('NACK', headers);\n    };\n    return StompClient;\n}());\nexport { StompClient };\n//# sourceMappingURL=stomp.js.map","import { StompClient } from './stomp';\nimport { BehaviorSubject, Subject } from 'rxjs';\nexport var DmStompState;\n(function (DmStompState) {\n    DmStompState[DmStompState[\"Undefined\"] = 0] = \"Undefined\";\n    DmStompState[DmStompState[\"Connecting\"] = 1] = \"Connecting\";\n    DmStompState[DmStompState[\"Connected\"] = 2] = \"Connected\";\n    DmStompState[DmStompState[\"Disconnecting\"] = 3] = \"Disconnecting\";\n    DmStompState[DmStompState[\"Disconnected\"] = 4] = \"Disconnected\";\n})(DmStompState || (DmStompState = {}));\nvar DmStompServiceConfig = /** @class */ (function () {\n    function DmStompServiceConfig() {\n        this.url = '';\n        this.login = 'guest';\n        this.passcode = 'guest';\n        this.heartbeatIn = 0;\n        this.heartbeatOut = 20000;\n        this.host = '/';\n        this.protocols = ['v10.stomp', 'v11.stomp'];\n    }\n    return DmStompServiceConfig;\n}());\nexport { DmStompServiceConfig };\nvar StompQ = /** @class */ (function () {\n    function StompQ() {\n    }\n    StompQ.client = function (url, protocols) {\n        if (protocols == null) {\n            protocols = ['v10.stomp', 'v11.stomp'];\n        }\n        var ws = new WebSocket(url, protocols);\n        return new StompClient(ws);\n    };\n    StompQ.over = function (ws) {\n        return new StompClient(ws);\n    };\n    StompQ.D = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this.debug) {\n            this.debug.apply(this, args);\n        }\n    };\n    return StompQ;\n}());\nexport { StompQ };\nvar DmStompService = /** @class */ (function () {\n    function DmStompService(config) {\n        this.config = config;\n        this._state = DmStompState.Undefined;\n        this.state = new BehaviorSubject(DmStompState.Undefined);\n        this.onError = new Subject();\n        this.onConnect = new Subject();\n        this.onDisconnect = new Subject();\n        this.onReceive = new Subject();\n        this.onReceipt = new Subject();\n        this.debug = new Subject();\n        if (config) {\n            this.configure(config);\n        }\n    }\n    DmStompService.prototype.configure = function (config) {\n        var _this = this;\n        this.config = config;\n        var ws = this.config.ws || new WebSocket(this.config.url, this.config.protocols);\n        this.client = new StompClient(ws);\n        this.client.heartbeat.incoming = this.config.heartbeatIn;\n        this.client.heartbeat.outgoing = this.config.heartbeatOut;\n        this.client.errorCallback = function (f) { return _this.onError.next(f); };\n        this.client.connectCallback = function (f) { return _this.onConnect.next(f); };\n        this.client.disconnectCallback = function (f) { return _this.onDisconnect.next(f); };\n        this.client.onreceive = function (f) { return _this.onReceive.next(f); };\n        this.client.onreceipt = function (f) { return _this.onReceipt.next(f); };\n    };\n    DmStompService.prototype.connect = function () {\n        if ((this._state != DmStompState.Undefined && this._state != DmStompState.Disconnected)\n            || !this.client\n            || !this.config) {\n            return false;\n        }\n        this.state.next(DmStompState.Connecting);\n        this.client.connect(this.config.login, this.config.passcode, this.config.host);\n        return true;\n    };\n    DmStompService.prototype.disconnect = function (headers) {\n        var _this = this;\n        this.state.next(DmStompState.Disconnecting);\n        this.client.disconnect(function () { return _this.state.next(DmStompState.Disconnected); }, headers);\n    };\n    DmStompService.prototype.publish = function (topic, message, headers) {\n        this.client.send(topic, headers || {}, message);\n    };\n    DmStompService.prototype.subscribe = function (topic, callback, headers) {\n        this.client.subscribe(topic, function (msg) { return callback(msg); }, headers || { ack: 'auto' });\n    };\n    DmStompService.prototype.isConnected = function () {\n        return this.client ? this.client.connected : false;\n    };\n    return DmStompService;\n}());\nexport { DmStompService };\n//# sourceMappingURL=stomp.service.js.map"]}