{"version":3,"file":"stomp.js","sourceRoot":"","sources":["../../../../src/stomp.ts"],"names":[],"mappings":"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","sourcesContent":["// Converted to typescript by Dmitry Mukhin (https://github.com/Dimanoid)\n// Generated by CoffeeScript 1.7.1\n/*\n   Stomp Over WebSocket http://www.jmesnil.net/stomp-websocket/doc/ | Apache License V2.0\n   Copyright (C) 2010-2013 [Jeff Mesnil](http://jmesnil.net/)\n   Copyright (C) 2012 [FuseSource, Inc.](http://fusesource.com)\n */\n\nconst Byte = {\n    LF: '\\x0A',\n    NULL: '\\x00'\n};\n\nconst VERSIONS = {\n    V1_0: '1.0',\n    V1_1: '1.1',\n    V1_2: '1.2',\n    supportedVersions: '1.1,1.0'\n};\n\n// export interface StompMessage {\n//     command: string;\n//     headers: any;\n//     body: string;\n//     ack(headers?: any): void;\n//     nack(headers?: any): void;\n// }\n\nexport class StompFrame {\n\n    command: string;\n    body: string;\n    headers: { [id: string]: string };\n    ack?: (headers: { [id: string]: string }) => void;\n    nack?: (headers: { [id: string]: string }) => void;\n\n    static marshall(command: string, headers: { [id: string]: string }, body?: string): string {\n        let frame;\n        frame = new StompFrame(command, headers, body);\n        return frame.toString() + Byte.NULL;\n    }\n\n    static unmarshall(datas: string): StompFrame[] {\n        const ref = datas.split(RegExp('' + Byte.NULL + Byte.LF + '*'));\n        const results = [];\n        for (let i = 0; i < ref.length; i++) {\n            const data = ref[i];\n            if (data && data.length > 0) {\n                results.push(StompFrame.unmarshallSingle(data));\n            }\n        }\n        return results;\n    }\n\n    static unmarshallSingle(data: string): StompFrame {\n        const divider = data.search(RegExp('' + Byte.LF + Byte.LF));\n        const headerLines = data.substring(0, divider).split(Byte.LF);\n        const command = headerLines.shift();\n        const headers: { [id: string]: string } = {};\n        \n        const trim = (str: string) => str.replace(/^\\s+|\\s+$/g, '');\n        const ref = headerLines.reverse();\n        for (let i = 0; i < ref.length; i++) {\n            const line = ref[i];\n            const idx = line.indexOf(':');\n            headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\n        }\n        let body = '';\n        const start = divider + 2;\n        if (headers['content-length']) {\n            const len = parseInt(headers['content-length'], 0);\n            body = ('' + data).substring(start, start + len);\n        }\n        else {\n            let chr = null;\n            for (let i = start, j = start, ref = data.length; start <= ref ? j < ref : j > ref; i = start <= ref ? ++j : --j) {\n                chr = data.charAt(i);\n                if (chr === Byte.NULL) {\n                    break;\n                }\n                body += chr;\n            }\n        }\n        return new StompFrame(command!, headers, body);\n    }\n\n    constructor(command: string, headers: { [id: string]: string }, body?: string) {\n        this.command = command;\n        this.headers = headers != null ? headers : {};\n        this.body = body != null ? body : '';\n    }\n\n    toString(): string {\n        const lines = [this.command];\n        const skipContentLength = !this.headers['content-length'];\n        if (skipContentLength) {\n            delete this.headers['content-length'];\n        }\n        for (const name of Object.keys(this.headers)) {\n            lines.push('' + name + ':' + this.headers[name]);\n        }\n        if (this.body && !skipContentLength) {\n            lines.push('content-length:' + (this.sizeOfUTF8(this.body)));\n        }\n        lines.push(Byte.LF + this.body);\n        return lines.join(Byte.LF);\n    }\n\n    sizeOfUTF8(s: string): number {\n        if (s) {\n            const match = encodeURI(s).match(/%..|./g);\n            return match ? match.length : 0;\n        }\n        return 0;\n    }\n\n}\n\nexport class StompClient {\n    ws: WebSocket;\n    counter: number = 0;\n    connected: boolean = false;\n    heartbeat = {\n        outgoing: 10000,\n        incoming: 10000\n    };\n    maxWebSocketFrameSize = 16 * 1024;\n    subscriptions: { [id: string]: (frame: StompFrame) => void } = {};\n\n    pinger: any;\n    ponger: any;\n\n    headers: { [id: string]: string } = {};\n\n    errorCallback?: (frame: StompFrame) => void;\n    connectCallback?: (frame: StompFrame) => void;\n    disconnectCallback?: (frame?: StompFrame) => void;\n\n    serverActivity: number = 0;\n    onreceive?: (frame: StompFrame) => void;\n    onreceipt?: (frame: StompFrame) => void;\n\n    debug?: (...args: any[]) => void;\n\n    constructor(ws: WebSocket) {\n        this.ws = ws;\n        this.ws.binaryType = 'arraybuffer';\n    }\n\n    D(...args: any[]): void {\n        if (this.debug) {\n            this.debug(...args);\n        };\n    }\n\n    now(): number {\n        if (Date.now) {\n            return Date.now();\n        }\n        else {\n            return new Date().valueOf();\n        }\n    }\n\n    private _transmit(command: string, headers: { [id: string]: string }, body?: string): void {\n        let out = StompFrame.marshall(command, headers, body);\n        this.D('>>> ', out);\n        while (true) {\n            if (out.length > this.maxWebSocketFrameSize) {\n                this.ws.send(out.substring(0, this.maxWebSocketFrameSize));\n                out = out.substring(this.maxWebSocketFrameSize);\n                this.D('remaining = ', out.length);\n            }\n            else {\n                return this.ws.send(out);\n            }\n        }\n    }\n\n    private _setupHeartbeat(headers: { [id: string]: string }): void {\n        if (headers.version !== VERSIONS.V1_1 && headers.version !== VERSIONS.V1_2) {\n            return;\n        }\n        const hb = headers['heart-beat'].split(',');\n        const serverOutgoing = hb[0];\n        const serverIncoming = hb[1];\n\n        if (this.heartbeat.outgoing !== 0 && +serverIncoming !== 0) {\n            const ttl = Math.max(this.heartbeat.outgoing, +serverIncoming);\n            this.D('send PING every ', ttl, 'ms');\n            this.pinger = setInterval(() => {\n                this.ws.send(Byte.LF);\n                this.D('>>> PING');\n            }, ttl);\n        }\n        if (this.heartbeat.incoming !== 0 && +serverOutgoing !== 0) {\n            const ttl = Math.max(this.heartbeat.incoming, +serverOutgoing);\n            this.D('check PONG every ', ttl, 'ms');\n            this.ponger = setInterval(() => {\n                const delta = this.now() - this.serverActivity;\n                if (delta > ttl * 2) {\n                    this.D('did not receive server activity for the last', delta, 'ms');\n                    this.ws.close();\n                }\n            }, ttl);\n        }\n    }\n\n    connect (\n        login: string,\n        passcode: string,\n        host: string,\n    ) {\n        this.headers['login'] = login;\n        this.headers['passcode'] = passcode;\n        this.headers['host'] = host;\n\n        this.D('Opening Web Socket...');\n        this.ws.onmessage = (evt) => {\n            let data;\n            if (typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer) {\n                const arr = new Uint8Array(evt.data);\n                this.D('--- got data length:', arr.length);\n                data = '';\n                for (let i = 0; i < arr.length; i++) {\n                    data = data + String.fromCharCode(arr[i]);\n                }\n            }\n            else {\n                data = evt.data;\n            }\n\n            this.serverActivity = this.now();\n            if (data === Byte.LF) {\n                this.D('<<< PONG');\n                return;\n            }\n            this.D('<<< ' + data);\n            const umData = StompFrame.unmarshall(data);\n            for (let i = 0; i < umData.length; i++) {\n                const frame = umData[i];\n                switch (frame.command) {\n                    case 'CONNECTED':\n                        this.D('connected to server ', frame.headers.server);\n                        this.connected = true;\n                        this._setupHeartbeat(frame.headers);\n                        if (this.connectCallback) {\n                            this.connectCallback(frame);\n                        }\n                        break;\n                    case 'MESSAGE':\n                        const subscription = frame.headers.subscription;\n                        const onreceive = this.subscriptions[subscription] || this.onreceive;\n                        if (onreceive) {\n                            const messageID = frame.headers['message-id'];\n                            frame.ack = (headers) => {\n                                if (headers == null) {\n                                    headers = {};\n                                }\n                                this.ack(messageID, subscription, headers);\n                            };\n                            frame.nack = (headers) => {\n                                if (headers == null) {\n                                    headers = {};\n                                }\n                                return this.nack(messageID, subscription, headers);\n                            };\n                            onreceive(frame);\n                        }\n                        else {\n                            this.D('Unhandled received MESSAGE:', frame);\n                        }\n                        break;\n                    case 'RECEIPT':\n                        if (this.onreceipt) {\n                            this.onreceipt(frame);\n                        }\n                        break;\n                    case 'ERROR':\n                        this.D('ws.readyState:', this.ws.readyState);\n                        if (this.errorCallback) {\n                            this.errorCallback(frame);\n                            this.D('after errorCallback ws.readyState:', this.ws.readyState);\n                        }\n                        break;\n                    default:\n                        this.D('Unhandled frame:', frame);\n                }\n                this.D('after switch ws.readyState:', this.ws.readyState);\n            }\n            this.D('after for ws.readyState:', this.ws.readyState);\n        };\n\n        this.ws.onclose = (...q) => {\n            this.D('ws.onclose, ws.readyState:', this.ws.readyState, q);\n            this._cleanUp();\n            if (this.disconnectCallback) {\n                this.disconnectCallback();\n            }\n        };\n\n        this.ws.onopen = () => {\n            this.D('Web Socket Opened...');\n            this.headers['accept-version'] = VERSIONS.supportedVersions;\n            this.headers['heart-beat'] = [this.heartbeat.outgoing, this.heartbeat.incoming].join(',');\n            this._transmit('CONNECT', this.headers);\n        };\n    }\n\n    disconnect(disconnectCallback: (frame?: StompFrame) => void, headers?: { [id: string]: string }) {\n        this.D('disconnect, ws.readyState:', this.ws.readyState);\n        this._transmit('DISCONNECT', headers || {});\n        this.ws.onclose = null;\n        this.ws.close();\n        this._cleanUp();\n        if (disconnectCallback) {\n            disconnectCallback();\n        }\n    }\n\n    private _cleanUp() {\n        this.connected = false;\n        if (this.pinger) {\n            clearInterval(this.pinger);\n        }\n        if (this.ponger) {\n            return clearInterval(this.ponger);\n        }\n    }\n\n    send(destination: string, headers: { [id: string]: string }, body: string) {\n        if (headers == null) {\n            headers = {};\n        }\n        if (body == null) {\n            body = '';\n        }\n        headers.destination = destination;\n        return this._transmit('SEND', headers, body);\n    }\n\n    subscribe(destination: string, callback: (frame: StompFrame) => void, headers: { [id: string]: string }) {\n        if (headers == null) {\n            headers = {};\n        }\n        if (!headers.id) {\n            headers.id = 'sub-' + this.counter++;\n        }\n        headers.destination = destination;\n        this.subscriptions[headers.id] = callback;\n        this._transmit('SUBSCRIBE', headers);\n        return {\n            id: headers.id,\n            unsubscribe: () => this.unsubscribe(headers.id)\n        };\n    }\n\n    unsubscribe(id: string): void {\n        delete this.subscriptions[id];\n        this._transmit('UNSUBSCRIBE', { id });\n    }\n\n    begin(transaction: string) {\n        const txid = transaction || 'tx-' + this.counter++;\n        this._transmit('BEGIN', {\n            transaction: txid\n        });\n        return {\n            id: txid,\n            commit: () => this.commit(txid),\n            abort: () => this.abort(txid)\n        };\n    }\n\n    commit(transaction: string): void {\n        return this._transmit('COMMIT', { transaction });\n    }\n\n    abort(transaction: string): void {\n        this._transmit('ABORT', { transaction });\n    }\n\n    ack(messageID: string, subscription: string, headers: { [id: string]: string }): void {\n        if (headers == null) {\n            headers = {};\n        }\n        headers['message-id'] = messageID;\n        headers.subscription = subscription;\n        return this._transmit('ACK', headers);\n    }\n\n    nack(messageID: string, subscription: string, headers: { [id: string]: string }): void {\n        if (headers == null) {\n            headers = {};\n        }\n        headers['message-id'] = messageID;\n        headers.subscription = subscription;\n        return this._transmit('NACK', headers);\n    }\n}\n"]}